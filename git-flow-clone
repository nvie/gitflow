#
# git-flow -- A collection of Git extensions to provide high-level
# repository operations for Vincent Driessen's branching model.
#
# Original blog post presenting this model is found at:
#    http://nvie.com/git-model
#
# Feel free to contribute to this project at:
#    http://github.com/nvie/gitflow
#
# Copyright 2010 Vincent Driessen. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#    1. Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
# 
#    2. Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY VINCENT DRIESSEN ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL VINCENT DRIESSEN OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# The views and conclusions contained in the software and documentation are
# those of the authors and should not be interpreted as representing official
# policies, either expressed or implied, of Vincent Driessen.
#

NO_SUBACTION=true

usage() {
	echo "usage: git flow clone <repository>"
}

parse_args() {
	# parse options
	FLAGS "$@" || exit $?
	eval set -- "${FLAGS_ARGV}"

	REPO=$1
	DIRECTORY=`echo "$REPO" | sed "s/.*[/:]//g" | sed "s/\.git//g"`
}

# Default entry when no SUBACTION is given
cmd_default() {
	cmd_clone "$@"
}

cmd_clone() {
	parse_args "$@"

	if [ "$REPO" == "" ]; then
		usage
		exit 1
	fi

	mkdir "$DIRECTORY" || die "git flow clone aborted. Could not create directory $DIRECTORY"
	cd "$DIRECTORY"

	git init > /dev/null 2>&1
	require_git_repo

	git remote add origin "$REPO"
	git fetch

	if [ "$?" -ne "0" ]; then
		cd ..
		rm -r "$DIRECTORY"
		exit 1
	fi

	git flow init
	require_gitflow_initialized
	gitflow_load_settings


	git branch -D "$MASTER_BRANCH" > /dev/null 2>&1
	git checkout -b "$MASTER_BRANCH" "origin/$MASTER_BRANCH"

	git branch -D "$DEVELOP_BRANCH" > /dev/null 2>&1
	git checkout -b "$DEVELOP_BRANCH" "origin/$DEVELOP_BRANCH"

	echo
	echo "Summary of actions:"
	echo "- Repository $REPO was cloned"
	echo "- The local branch $MASTER_BRANCH was configured to track the remote branch"
	echo "- The local branch $DEVELOP_BRANCH was configured to track the remote branch"
	echo
}
